syntax = "proto3";

package pnp;

import "github.com/ZTP/pnp/common/proto/common.proto";

service PnP {
    rpc GetPackages (stream ClientPkgRequest) returns (stream ServerPkgResponse) {}
}

enum ClientMsgType {
    AUTHENTICATE_CLIENT = 0;
    PKG_ENV_INIT = 1;
    PKG_ENV_INITIALIZED = 2;
    PKG_ENV_INITIALIZE_FAILED = 3;
    PKG_NOT_INSTALLED = 4;
    PKG_INSTALLED = 5;
    PKG_VERSION_OUTDATED = 6;
    PKG_VERSION_LATEST = 7;
    PKG_UNINSTALL_SUCCESS = 8;
    PKG_UNINSTALL_FAILED = 9;
    PKG_INSTALL_SUCCESS = 10;
    PKG_INSTALL_FAILED = 11;
    PKG_ROLLBACK_SUCCESS = 12;
    PKG_ROLLBACK_FAILED = 13;
    GET_NEXT = 14;
}

enum ServerMsgType {
    CLIENT_AUTHENTICATED = 0;
    INITIALIZE_ENV = 1;
    IS_PKG_INSTALLED = 2;
    INSTALL_PKG = 3;
    INSTALL_PKG_FROM_FILE = 4;
    IS_PKG_OUTDATED = 5;
    UNINSTALL_PKG = 6;
    ROLLBACK_PKG = 7;
    GET_NEXT_PKG = 8;
}

enum ServerCmdType {
    RUN = 0;
    INFO = 1;
    CLOSE_CONN = 2;
    MANUAL_UPDATE = 3;
}

message ClientInfo {
    string osType = 1;
    string osFlavor = 2;
    string archType = 3;
    string MAC_addr = 4;
}

message CommonClientInfo {
    common.RequestHeader requestHeader = 1;
    ClientInfo clientInfo = 2;
}

message ClientPkgRequest {
    CommonClientInfo commonClientInfo = 1;
    ClientMsgType clientMsgType = 2;
}

message CommonServerResponse {
    common.ResponseHeader responseHeader = 1;
    ServerCmdType serverCmdType = 2;
}

message ServerInstructionPayload {
    repeated string cmd = 1;
}

message PackageDetails {
    string packageName = 1;
    string packageVersion = 2;
    bool autoUpdate = 3;
}

message ServerPkgResponse {
    CommonServerResponse commonServerResponse = 1;
    ServerMsgType serverMsgType = 2;
    ServerInstructionPayload serverInstructionPayload = 3;
    PackageDetails packageDetails = 4;
}



