// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pnp.proto

/*
Package pnp is a generated protocol buffer package.

It is generated from these files:
	pnp.proto

It has these top-level messages:
	ClientInfo
	CommonClientInfo
	ClientPkgRequest
	CommonServerResponse
	ServerInstructionPayload
	ServerPkgResponse
*/
package pnp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/ZTP/pnp/common/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClientMsgType int32

const (
	ClientMsgType_PKG_ZTP_INIT          ClientMsgType = 0
	ClientMsgType_PKG_INIT              ClientMsgType = 1
	ClientMsgType_PKG_NOT_INSTALLED     ClientMsgType = 2
	ClientMsgType_PKG_INSTALLED         ClientMsgType = 3
	ClientMsgType_PKG_VERSION_CHANGED   ClientMsgType = 4
	ClientMsgType_PKG_VERSION_NO_CHANGE ClientMsgType = 5
	ClientMsgType_PKG_UNINSTALL_SUCCESS ClientMsgType = 6
	ClientMsgType_PKG_UNINSTALL_FAILED  ClientMsgType = 7
	ClientMsgType_PKG_INSTALL_SUCCESS   ClientMsgType = 8
	ClientMsgType_PKG_INSTALL_FAILED    ClientMsgType = 9
)

var ClientMsgType_name = map[int32]string{
	0: "PKG_ZTP_INIT",
	1: "PKG_INIT",
	2: "PKG_NOT_INSTALLED",
	3: "PKG_INSTALLED",
	4: "PKG_VERSION_CHANGED",
	5: "PKG_VERSION_NO_CHANGE",
	6: "PKG_UNINSTALL_SUCCESS",
	7: "PKG_UNINSTALL_FAILED",
	8: "PKG_INSTALL_SUCCESS",
	9: "PKG_INSTALL_FAILED",
}
var ClientMsgType_value = map[string]int32{
	"PKG_ZTP_INIT":          0,
	"PKG_INIT":              1,
	"PKG_NOT_INSTALLED":     2,
	"PKG_INSTALLED":         3,
	"PKG_VERSION_CHANGED":   4,
	"PKG_VERSION_NO_CHANGE": 5,
	"PKG_UNINSTALL_SUCCESS": 6,
	"PKG_UNINSTALL_FAILED":  7,
	"PKG_INSTALL_SUCCESS":   8,
	"PKG_INSTALL_FAILED":    9,
}

func (x ClientMsgType) String() string {
	return proto.EnumName(ClientMsgType_name, int32(x))
}
func (ClientMsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ServerMsgType int32

const (
	ServerMsgType_INITIALIZED_ENV_FOR_CLIENT ServerMsgType = 0
	ServerMsgType_IS_PKG_INSTALLED           ServerMsgType = 1
	ServerMsgType_INSTALL_PKG                ServerMsgType = 2
	ServerMsgType_INSTALL_PKG_FROM_FILE      ServerMsgType = 3
	ServerMsgType_IS_PKG_OUTDATED            ServerMsgType = 4
	ServerMsgType_UNINSTALL_PKG              ServerMsgType = 5
	ServerMsgType_GET_NEXT_PKG               ServerMsgType = 6
)

var ServerMsgType_name = map[int32]string{
	0: "INITIALIZED_ENV_FOR_CLIENT",
	1: "IS_PKG_INSTALLED",
	2: "INSTALL_PKG",
	3: "INSTALL_PKG_FROM_FILE",
	4: "IS_PKG_OUTDATED",
	5: "UNINSTALL_PKG",
	6: "GET_NEXT_PKG",
}
var ServerMsgType_value = map[string]int32{
	"INITIALIZED_ENV_FOR_CLIENT": 0,
	"IS_PKG_INSTALLED":           1,
	"INSTALL_PKG":                2,
	"INSTALL_PKG_FROM_FILE":      3,
	"IS_PKG_OUTDATED":            4,
	"UNINSTALL_PKG":              5,
	"GET_NEXT_PKG":               6,
}

func (x ServerMsgType) String() string {
	return proto.EnumName(ServerMsgType_name, int32(x))
}
func (ServerMsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ServerCmdType int32

const (
	ServerCmdType_RUN        ServerCmdType = 0
	ServerCmdType_CONFIG     ServerCmdType = 1
	ServerCmdType_INFO       ServerCmdType = 2
	ServerCmdType_CLOSE_CONN ServerCmdType = 3
)

var ServerCmdType_name = map[int32]string{
	0: "RUN",
	1: "CONFIG",
	2: "INFO",
	3: "CLOSE_CONN",
}
var ServerCmdType_value = map[string]int32{
	"RUN":        0,
	"CONFIG":     1,
	"INFO":       2,
	"CLOSE_CONN": 3,
}

func (x ServerCmdType) String() string {
	return proto.EnumName(ServerCmdType_name, int32(x))
}
func (ServerCmdType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ClientInfo struct {
	OsType   string `protobuf:"bytes,1,opt,name=osType" json:"osType,omitempty"`
	OsFlavor string `protobuf:"bytes,2,opt,name=osFlavor" json:"osFlavor,omitempty"`
	ArchType string `protobuf:"bytes,3,opt,name=archType" json:"archType,omitempty"`
	MACAddr  string `protobuf:"bytes,4,opt,name=MAC_addr,json=MACAddr" json:"MAC_addr,omitempty"`
}

func (m *ClientInfo) Reset()                    { *m = ClientInfo{} }
func (m *ClientInfo) String() string            { return proto.CompactTextString(m) }
func (*ClientInfo) ProtoMessage()               {}
func (*ClientInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ClientInfo) GetOsType() string {
	if m != nil {
		return m.OsType
	}
	return ""
}

func (m *ClientInfo) GetOsFlavor() string {
	if m != nil {
		return m.OsFlavor
	}
	return ""
}

func (m *ClientInfo) GetArchType() string {
	if m != nil {
		return m.ArchType
	}
	return ""
}

func (m *ClientInfo) GetMACAddr() string {
	if m != nil {
		return m.MACAddr
	}
	return ""
}

type CommonClientInfo struct {
	RequestHeader *common.RequestHeader `protobuf:"bytes,1,opt,name=requestHeader" json:"requestHeader,omitempty"`
	ClientInfo    *ClientInfo           `protobuf:"bytes,2,opt,name=clientInfo" json:"clientInfo,omitempty"`
}

func (m *CommonClientInfo) Reset()                    { *m = CommonClientInfo{} }
func (m *CommonClientInfo) String() string            { return proto.CompactTextString(m) }
func (*CommonClientInfo) ProtoMessage()               {}
func (*CommonClientInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CommonClientInfo) GetRequestHeader() *common.RequestHeader {
	if m != nil {
		return m.RequestHeader
	}
	return nil
}

func (m *CommonClientInfo) GetClientInfo() *ClientInfo {
	if m != nil {
		return m.ClientInfo
	}
	return nil
}

type ClientPkgRequest struct {
	CommonClientInfo *CommonClientInfo `protobuf:"bytes,1,opt,name=commonClientInfo" json:"commonClientInfo,omitempty"`
	ClientMsgType    ClientMsgType     `protobuf:"varint,2,opt,name=clientMsgType,enum=pnp.ClientMsgType" json:"clientMsgType,omitempty"`
}

func (m *ClientPkgRequest) Reset()                    { *m = ClientPkgRequest{} }
func (m *ClientPkgRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientPkgRequest) ProtoMessage()               {}
func (*ClientPkgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClientPkgRequest) GetCommonClientInfo() *CommonClientInfo {
	if m != nil {
		return m.CommonClientInfo
	}
	return nil
}

func (m *ClientPkgRequest) GetClientMsgType() ClientMsgType {
	if m != nil {
		return m.ClientMsgType
	}
	return ClientMsgType_PKG_ZTP_INIT
}

type CommonServerResponse struct {
	ResponseHeader *common.ResponseHeader `protobuf:"bytes,1,opt,name=responseHeader" json:"responseHeader,omitempty"`
	ServerCmdType  ServerCmdType          `protobuf:"varint,2,opt,name=serverCmdType,enum=pnp.ServerCmdType" json:"serverCmdType,omitempty"`
}

func (m *CommonServerResponse) Reset()                    { *m = CommonServerResponse{} }
func (m *CommonServerResponse) String() string            { return proto.CompactTextString(m) }
func (*CommonServerResponse) ProtoMessage()               {}
func (*CommonServerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CommonServerResponse) GetResponseHeader() *common.ResponseHeader {
	if m != nil {
		return m.ResponseHeader
	}
	return nil
}

func (m *CommonServerResponse) GetServerCmdType() ServerCmdType {
	if m != nil {
		return m.ServerCmdType
	}
	return ServerCmdType_RUN
}

type ServerInstructionPayload struct {
	Cmd []string `protobuf:"bytes,1,rep,name=cmd" json:"cmd,omitempty"`
}

func (m *ServerInstructionPayload) Reset()                    { *m = ServerInstructionPayload{} }
func (m *ServerInstructionPayload) String() string            { return proto.CompactTextString(m) }
func (*ServerInstructionPayload) ProtoMessage()               {}
func (*ServerInstructionPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ServerInstructionPayload) GetCmd() []string {
	if m != nil {
		return m.Cmd
	}
	return nil
}

type ServerPkgResponse struct {
	CommonServerResponse     *CommonServerResponse     `protobuf:"bytes,1,opt,name=commonServerResponse" json:"commonServerResponse,omitempty"`
	ServerMsgType            ServerMsgType             `protobuf:"varint,2,opt,name=serverMsgType,enum=pnp.ServerMsgType" json:"serverMsgType,omitempty"`
	ServerInstructionPayload *ServerInstructionPayload `protobuf:"bytes,3,opt,name=serverInstructionPayload" json:"serverInstructionPayload,omitempty"`
}

func (m *ServerPkgResponse) Reset()                    { *m = ServerPkgResponse{} }
func (m *ServerPkgResponse) String() string            { return proto.CompactTextString(m) }
func (*ServerPkgResponse) ProtoMessage()               {}
func (*ServerPkgResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ServerPkgResponse) GetCommonServerResponse() *CommonServerResponse {
	if m != nil {
		return m.CommonServerResponse
	}
	return nil
}

func (m *ServerPkgResponse) GetServerMsgType() ServerMsgType {
	if m != nil {
		return m.ServerMsgType
	}
	return ServerMsgType_INITIALIZED_ENV_FOR_CLIENT
}

func (m *ServerPkgResponse) GetServerInstructionPayload() *ServerInstructionPayload {
	if m != nil {
		return m.ServerInstructionPayload
	}
	return nil
}

func init() {
	proto.RegisterType((*ClientInfo)(nil), "pnp.ClientInfo")
	proto.RegisterType((*CommonClientInfo)(nil), "pnp.CommonClientInfo")
	proto.RegisterType((*ClientPkgRequest)(nil), "pnp.ClientPkgRequest")
	proto.RegisterType((*CommonServerResponse)(nil), "pnp.CommonServerResponse")
	proto.RegisterType((*ServerInstructionPayload)(nil), "pnp.ServerInstructionPayload")
	proto.RegisterType((*ServerPkgResponse)(nil), "pnp.ServerPkgResponse")
	proto.RegisterEnum("pnp.ClientMsgType", ClientMsgType_name, ClientMsgType_value)
	proto.RegisterEnum("pnp.ServerMsgType", ServerMsgType_name, ServerMsgType_value)
	proto.RegisterEnum("pnp.ServerCmdType", ServerCmdType_name, ServerCmdType_value)
}

func init() { proto.RegisterFile("pnp.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 712 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0x51, 0x4f, 0xe2, 0x4a,
	0x14, 0xb6, 0x54, 0x11, 0x0e, 0xa2, 0xc3, 0x08, 0x5c, 0x24, 0xb9, 0x37, 0x86, 0x27, 0x63, 0x0c,
	0xdc, 0x70, 0x5f, 0x6e, 0x72, 0x13, 0x93, 0xde, 0x52, 0xb0, 0x11, 0xa6, 0xcd, 0xb4, 0x98, 0x5d,
	0x5f, 0x9a, 0xda, 0x76, 0xd1, 0x28, 0x6d, 0xb7, 0x45, 0x37, 0xbe, 0xed, 0x3f, 0xd8, 0xfd, 0x1f,
	0xfb, 0xf3, 0xf6, 0x61, 0x5f, 0x37, 0x33, 0x14, 0x99, 0xa2, 0xbe, 0xf5, 0xcc, 0xf7, 0x9d, 0xef,
	0x7c, 0xe7, 0xeb, 0xb4, 0x50, 0x8e, 0xc3, 0xb8, 0x1b, 0x27, 0xd1, 0x22, 0xc2, 0x72, 0x1c, 0xc6,
	0xed, 0xb3, 0xd9, 0xdd, 0xe2, 0xf6, 0xf1, 0xa6, 0xeb, 0x45, 0xf3, 0xde, 0xb5, 0x6d, 0xf6, 0xe2,
	0x30, 0xee, 0x79, 0xd1, 0x7c, 0x1e, 0x85, 0x3d, 0xce, 0xca, 0x8a, 0x65, 0x4b, 0xe7, 0x0b, 0x80,
	0xfa, 0x70, 0x17, 0x84, 0x0b, 0x3d, 0xfc, 0x14, 0xe1, 0x26, 0x14, 0xa3, 0xd4, 0x7e, 0x8e, 0x83,
	0x96, 0x74, 0x2c, 0x9d, 0x94, 0x69, 0x56, 0xe1, 0x36, 0x94, 0xa2, 0x74, 0xf8, 0xe0, 0x3e, 0x45,
	0x49, 0xab, 0xc0, 0x91, 0x97, 0x9a, 0x61, 0x6e, 0xe2, 0xdd, 0xf2, 0x2e, 0x79, 0x89, 0xad, 0x6a,
	0x7c, 0x04, 0xa5, 0x89, 0xa2, 0x3a, 0xae, 0xef, 0x27, 0xad, 0x6d, 0x8e, 0xed, 0x4e, 0x14, 0x55,
	0xf1, 0xfd, 0xa4, 0xf3, 0x55, 0x02, 0xa4, 0x72, 0x27, 0xc2, 0xfc, 0xff, 0xa0, 0x9a, 0x04, 0x9f,
	0x1f, 0x83, 0x74, 0x71, 0x11, 0xb8, 0x7e, 0x90, 0x70, 0x1b, 0x95, 0x7e, 0xa3, 0x9b, 0x79, 0xa6,
	0x22, 0x48, 0xf3, 0x5c, 0xdc, 0x03, 0xf0, 0x5e, 0xa4, 0xb8, 0xcd, 0x4a, 0xff, 0xa0, 0xcb, 0xd2,
	0x59, 0x4f, 0xa0, 0x02, 0xa5, 0xf3, 0x8d, 0x59, 0xe0, 0xa5, 0x79, 0x3f, 0xcb, 0xa4, 0xb1, 0x02,
	0xc8, 0xdb, 0xb0, 0xf5, 0xe2, 0x82, 0x6b, 0x6d, 0x80, 0xf4, 0x15, 0x1d, 0xff, 0x0b, 0xd5, 0xe5,
	0x94, 0x49, 0x3a, 0xe3, 0xb1, 0x30, 0x2f, 0xfb, 0x7d, 0x2c, 0x78, 0xc9, 0x10, 0x9a, 0x27, 0x76,
	0xbe, 0x4b, 0x50, 0x5f, 0x0e, 0xb0, 0x82, 0xe4, 0x29, 0x48, 0x68, 0x90, 0xc6, 0x51, 0x98, 0x06,
	0xf8, 0x1c, 0xf6, 0x93, 0xec, 0x39, 0x97, 0x4c, 0x73, 0x9d, 0x8c, 0x88, 0xd2, 0x0d, 0x36, 0xb3,
	0x94, 0x72, 0x45, 0x75, 0xee, 0xbf, 0xb2, 0x64, 0x89, 0x08, 0xcd, 0x13, 0x3b, 0x67, 0xd0, 0x5a,
	0xe2, 0x7a, 0x98, 0x2e, 0x92, 0x47, 0x6f, 0x71, 0x17, 0x85, 0xa6, 0xfb, 0xfc, 0x10, 0xb9, 0x3e,
	0x46, 0x20, 0x7b, 0x73, 0xbf, 0x25, 0x1d, 0xcb, 0x27, 0x65, 0xca, 0x1e, 0x3b, 0xbf, 0x24, 0xa8,
	0x2d, 0xe9, 0x3c, 0xd2, 0xcc, 0xfd, 0x04, 0xea, 0xde, 0x1b, 0x5b, 0x65, 0x3b, 0x1c, 0x09, 0xb9,
	0xe6, 0x09, 0xf4, 0xcd, 0xb6, 0xf5, 0x32, 0x6f, 0xe5, 0x6b, 0x89, 0x08, 0xcd, 0x13, 0xf1, 0x47,
	0x68, 0xa5, 0xef, 0x2c, 0xc3, 0xef, 0x6e, 0xa5, 0xff, 0xa7, 0x20, 0xf2, 0x9a, 0x44, 0xdf, 0x6d,
	0x3f, 0xfd, 0x29, 0x41, 0x35, 0xf7, 0x6e, 0x31, 0x82, 0x3d, 0xf3, 0x72, 0xe4, 0x5c, 0xdb, 0xa6,
	0xa3, 0x13, 0xdd, 0x46, 0x5b, 0x78, 0x0f, 0x4a, 0xec, 0x84, 0x57, 0x12, 0x6e, 0x40, 0x8d, 0x55,
	0xc4, 0xb0, 0x1d, 0x9d, 0x58, 0xb6, 0x32, 0x1e, 0x6b, 0x03, 0x54, 0xc0, 0x35, 0xa8, 0x2e, 0x49,
	0xab, 0x23, 0x19, 0xff, 0x01, 0x87, 0xec, 0xe8, 0x4a, 0xa3, 0x96, 0x6e, 0x10, 0x47, 0xbd, 0x50,
	0xc8, 0x48, 0x1b, 0xa0, 0x6d, 0x7c, 0x04, 0x0d, 0x11, 0x20, 0x46, 0x86, 0xa1, 0x9d, 0x15, 0x34,
	0x25, 0x99, 0x90, 0x63, 0x4d, 0x55, 0x55, 0xb3, 0x2c, 0x54, 0xc4, 0x2d, 0xa8, 0xe7, 0xa1, 0xa1,
	0xa2, 0xb3, 0x41, 0xbb, 0xab, 0x41, 0x9b, 0x2d, 0x25, 0xdc, 0x04, 0x2c, 0x02, 0x59, 0x43, 0xf9,
	0xf4, 0x87, 0x04, 0xd5, 0x5c, 0xe2, 0xf8, 0x2f, 0x68, 0xb3, 0xfd, 0x74, 0x65, 0xac, 0x5f, 0x6b,
	0x03, 0x47, 0x23, 0x57, 0xce, 0xd0, 0xa0, 0x8e, 0x3a, 0xd6, 0x35, 0xc2, 0x32, 0xa8, 0x03, 0xd2,
	0x2d, 0x27, 0xbf, 0xa1, 0x84, 0x0f, 0xa0, 0xb2, 0xd2, 0x36, 0x2f, 0x47, 0xa8, 0xc0, 0xec, 0x0b,
	0x07, 0xce, 0x90, 0x1a, 0x13, 0x67, 0xa8, 0x8f, 0x35, 0x24, 0xe3, 0x43, 0x38, 0xc8, 0x14, 0x8c,
	0xa9, 0x3d, 0x50, 0x6c, 0x9e, 0x44, 0x0d, 0xaa, 0xeb, 0x7d, 0x98, 0xc4, 0x0e, 0xcb, 0x7f, 0xa4,
	0xd9, 0x0e, 0xd1, 0x3e, 0xd8, 0xfc, 0xa4, 0x78, 0x7a, 0xbe, 0x32, 0x9b, 0x5d, 0x6e, 0xbc, 0x0b,
	0x32, 0x9d, 0x12, 0xb4, 0x85, 0x01, 0x8a, 0xaa, 0x41, 0x86, 0xfa, 0x08, 0x49, 0xb8, 0x04, 0xdb,
	0x3a, 0x19, 0x1a, 0xa8, 0x80, 0xf7, 0x01, 0xd4, 0xb1, 0x61, 0x69, 0x8e, 0x6a, 0x10, 0x82, 0xe4,
	0xbe, 0x0e, 0xb2, 0x19, 0x9a, 0xf8, 0x7f, 0xa8, 0x8c, 0x82, 0x85, 0xe9, 0x7a, 0xf7, 0xee, 0x2c,
	0x48, 0x71, 0x43, 0xf8, 0xae, 0xd7, 0x3f, 0x92, 0x76, 0x53, 0xb8, 0x49, 0xc2, 0xc7, 0xd0, 0xd9,
	0x3a, 0x91, 0xfe, 0x96, 0x6e, 0x8a, 0xfc, 0xf7, 0xfb, 0xcf, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x5a, 0x46, 0xc5, 0x28, 0xbe, 0x05, 0x00, 0x00,
}
